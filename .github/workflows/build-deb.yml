name: Build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch name to build'
        required: true
        default: 'kvm-nyx-5.10.73'

jobs:
  debian_package:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          path: sources

      - name: Install ccache
        run: sudo apt-get install -y ccache

      - name: Install build deps
        run: sudo apt-get install -y libelf-dev dwarves

      - name: Get ubuntu's 22.04 5.15.0-25-generic kernel config
        run: |
          sudo apt install -y zstd
          apt download linux-modules-5.15.0-25-generic
          ar x linux-modules-5.15.0-25-generic_5.15.0-25.25_amd64.deb data.tar.zst
          tar -xvf data.tar.zst './boot/config-5.15.0-25-generic'
          mv  boot/config-5.15.0-25-generic sources/.config
          rm -r boot/ data.tar.zst linux-modules-5.15.0-25-generic_5.15.0-25.25_amd64.deb
      
      - name: Configure kernel and enable Nyx
        run: |
          # disable kernel signature
          ./scripts/config --disable SYSTEM_TRUSTED_KEYS
          ./scripts/config --disable SYSTEM_REVOCATION_KEYS
          # disable debug info (otherwise might fail with 'no space left on device' on the runnner)
          ./scripts/config --disable DEBUG_INFO
          # enable KVM
          ./scripts/config --module CONFIG_KVM
          # enable Nyx
          ./scripts/config --enable CONFIG_KVM_NYX
          # tweak locaversion
          ./scripts/config --set-str CONFIG_LOCALVERSION -nyx
        working-directory: sources
        
      - name: make olddefconfig
        run: make olddefconfig
        working-directory: sources

      - uses: actions/cache@v3
        with:
          path: ~/.cache/ccache
          key: "${{ runner.os }}-${{ inputs.branch }}-${{ hashFiles('.config') }}"
          restore-keys: |
            "${{ runner.os }}-${{ inputs.branch }}"
            "${{ runner.os }}"

      - name: Build kernel
        run: |
          export PATH="/usr/lib/ccache:$PATH"
          make -j$(nproc) bindeb-pkg
        working-directory: sources

      - uses: actions/upload-artifact@v3
        with:
          name: linux-${{ inputs.branch }}
          path: '*.deb'
